{	"extensionName": "IoT",
	"description":"IoT extension for Me WIFI Module",
	"version":"1.0",
	"author":"Just A HK Guy(justahkguy@gmail.com)",
	"homepage":"https://github.com/wandererinhk/IoT-extension-for-mBlock",
	"extensionPort": 0,
	"extensionHost": "127.0.0.1",
	"sort":7,
	"javascriptURL":"js/IoT.js",
	"blockSpecs": [
		
		["w", 
		"Attach WiFi Module RX@%s TX@%s",
		"AttachWifi",
		"12",
		"11",
		{"setup":"Wifi.begin(9600);\n",
		"inc":"",
		"def":"SoftwareSerial Wifi({0},{1});",
		"work":"",
		"loop":""
		}
		],
		
		["w", 
		"WiFi.write %s",
		"writeLine",
		"AT",
		{
		"setup":"Wifi.begin(9600);\n",
		"inc":"",
		"def":"",
		"work":"Wifi.println({0});\n",
		"loop":""
		}
		],
		
		["b", 
		"Connect AP|SSID %s |PW %s",
		"Connect AP",
		"SSID\\",
		"Password\\",
		{
		"setup":"Wifi.begin(9600);\n",
		"inc":"#include <String.h>\n",
		"def":"bool ConnectAP(){Wifi.println(F(\"AT+RST\"));delay(2000);Wifi.println(F(\"ATE0\"));Wifi.println(F(\"AT+CWMODE=1\"));Wifi.println(F(\"AT+CIPMUX=1\"));Wifi.println(F(\"AT+CWQAP\"));Wifi.setTimeout(16000);while(Wifi.available()){delayMicroseconds(500);Wifi.read();}Wifi.println(\"AT+CWJAP=\\{0}+\\{1}\");if (Wifi.find(\"OK\"))return true;else return false;};\n",
		"work":"ConnectAP()",
		"loop":""
		}
		],
		
		["b", 
		"Upload to thingspeak.com|API %s |Content %s",
		"Upload_freeform",
		"API",
		"field1=",
		{
		"setup":"Wifi.begin(9600);\n",
		"inc":"#include <String.h>\n",
		"def":"bool upLoadToThingspeak(const String& API, const String& CONTENT){Wifi.setTimeout(5000);while(Wifi.available()){delayMicroseconds(500);Wifi.read();}String Request;Request.reserve(16);String SendOut;SendOut.reserve(150);SendOut= F(\"GET https://api.thingspeak.com/update?api_key=\");SendOut.concat(API);SendOut.concat(F(\"&\"));SendOut.concat(CONTENT);Request=F(\"AT+CIPSEND=0,\");Request.concat(SendOut.length()+2);Wifi.println(F(\"AT+CIPSTART=0,\\\"TCP\\\",\\\"api.thingspeak.com\\\",80\"));if(Wifi.find(\"OK\\r\\n\")){Wifi.println(Request);if(Wifi.find(\">\")){Wifi.println(SendOut);if (Wifi.find(\"+IPD\"))return true;else {Wifi.println(F(\"AT+CIPCLOSE=0\"));return false;}}else{Wifi.println(F(\"AT+CIPCLOSE=0\"));return false;}}else return false;};\n",
		"work":"upLoadToThingspeak((String){0},(String){1})",
		"loop":""
		}
		],
		
		["b", 
		"Trigger an event to maker.ifttt.com|Event name %s |API %s |Content %s",
		"Trigger_ifttt_freeform",
		"EventName",
		"API",
		"value1=",
		{
		"setup":"Wifi.begin(9600);\n",
		"inc":"#include <String.h>\n",
		"def":"bool upLoadToIfttt(const String& EVENTNAME,const String& API,const String& CONTENT){Wifi.setTimeout(5000);while(Wifi.available()){Wifi.read();}String Request;Request.reserve(16);String SendOut;SendOut.reserve(150);SendOut= F(\"GET https://maker.ifttt.com/trigger/\");SendOut.concat(EVENTNAME);SendOut.concat(F(\"/with/key/\"));SendOut.concat(API);SendOut.concat(F(\"?\"));SendOut.concat(CONTENT);Request=F(\"AT+CIPSEND=1,\");Request.concat(SendOut.length()+2);Wifi.println(F(\"AT+CIPSTART=1,\\\"TCP\\\",\\\"maker.ifttt.com\\\",80\"));if (Wifi.find(\"OK\\r\\n\")){Wifi.println(Request);if (Wifi.find(\">\")){Wifi.println(SendOut);if (Wifi.find(\"Congratulations\"))return true;else {Wifi.println(F(\"AT+CIPCLOSE=1\"));return false;};}else{Wifi.println(F(\"AT+CIPCLOSE=1\"));return false;}}else return false;};\n",
		"work":"upLoadToIfttt((String){0},(String){1},(String){2})",
		"loop":""
		}
		],
		
		["r", 
		"Get Weather Info from OpenWeatherMap|API %s |City ID %s |Type %s",
		"Get_OpenWeatherMap",
		"API",
		"1819729",
		"temp/pressure/humidity/visibility",
		{
		"setup":"Wifi.begin(9600);\nSerial.begin(9600);\n",
		"inc":"#include <String.h>\n",
		"def":"float getWeather(const String& API, const long CityID, const String& TARGET) {Wifi.setTimeout(5000);String Request;Request.reserve(16);String SendOut;SendOut.reserve(150);String Read;Read.reserve(500);SendOut = F(\"GET http://api.openweathermap.org/data/2.5/weather?id=\");SendOut.concat(CityID);SendOut.concat(F(\"&appid=\"));SendOut.concat(API);Request =F(\"AT+CIPSEND=2,\") + (String)(SendOut.length() + 2);Wifi.println(F(\"AT+CIPSTART=2,\\\"TCP\\\",\\\"api.openweathermap.org\\\",80\"));delay(1000);if (Wifi.find(F(\"OK\\r\\n\"))) {Wifi.println(Request);if (Wifi.find(\">\")) {Wifi.println(SendOut);if (Wifi.find(\"SEND OK\")) {Read = Wifi.readString();Serial.println(Read);Read.remove(0, Read.indexOf(TARGET) + TARGET.length() + 2);Read.remove(Read.indexOf(\",\\\"\"));Serial.println(Read);Serial.println(Read.toFloat());return Read.toFloat();} else {Wifi.println(F(\"AT+CIPCLOSE=2\")); return 9999;}}else {Wifi.println(F(\"AT+CIPCLOSE=2\"));return 9999;}}}; \n",
		"work":"getWeather((String){0},(long){1},(String){2})",
		"loop":""
		}
		],
		
		
	],
	"menus": {
	},
	"translators":{
		"zh_TW":{
			"Attach WiFi Module RX@%s TX@%s":"連接Wifi模組 RX端口 %s |TX端口 %s",
			"WiFi.write %s":"發送序列信息(AT指令) %s",
			"Connect AP|SSID %s |PW %s":"連接到AP|SSID %s |密碼 %s",
			"Upload to thingspeak.com|API %s |Content %s":"上傳資料到thingspeak.com|API %s |內容 %s",
			"Trigger an event to maker.ifttt.com|Event name %s |API %s |Content %s":"觸發maker.ifttt.com事件|事件名稱 %s |API %s |內容 %s",
			"Get Weather Info from OpenWeatherMap|API %s |City ID %s |Type %s":"從OpenWeatherMap讀取資料|API %s |城市代碼 %s |類型 %s"
		}
	}
}